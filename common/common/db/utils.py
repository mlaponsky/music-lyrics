from typing import Dict, Any

from common.db.schema import DocumentSchema, DocumentSchemaRule, DocumentSchemaRuleProperty, PropertyType
from common.model import NodeModel


def convert_to_document(obj: NodeModel, use_autogenerated_key: bool = False) -> Dict[str, Any]:
    document: Dict[str, Any] = obj.__dict__.copy()
    if not use_autogenerated_key:
        document["_key"] = hash(obj)
    return document


def get_node_schema(doc_type: type(NodeModel)) -> DocumentSchema:
    return DocumentSchema(
        rule=DocumentSchemaRule(
            [DocumentSchemaRuleProperty(name=name,
                                        property=PropertyType.from_type(data_type))
             for name, data_type in doc_type.__annotations__.items()]
        )
    )
